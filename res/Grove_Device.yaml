name: "Grove_Device"
manufacturer: "Seeed"
model: ""
labels:
- "Grove LED, Grove Button, Grove Buzzer, Grove LCD, Grove LightSensor, Grove Relay, Grove RotarySensor, Grove SoundSensor, Grove BME680Sensor"
description: "Grove Device to Read/Write sensors connected to GrovePI."

deviceResources:
- name: Blue-LED
  description: "Turn the Blue LED to On/Off"
  attributes:
    { Pin_Num: "D2", Interface: "GPIO", Type: "OUT" }
  properties:
    value:
      { type: "bool", readWrite: "RW" }
    units:
      { type: "string", readWrite: "R", defaultValue: "Enabled/Disabled" }
- name: Green-LED
  description: "Turn the Green LED to On/Off"
  attributes:
    { Pin_Num: "D3", Interface: "GPIO", Type: "OUT" }
  properties:
    value:
      { type: "bool", readWrite: "RW" }
    units:
      { type: "string", readWrite: "R", defaultValue: "Enabled/Disabled" }
- name: ButtonState
  description: "HIGH when button is pressed and LOW on release"
  attributes:
    { Pin_Num: "D4", Interface: "GPIO", Type: "IN" }
  properties:
    value:
      { type: "uint8", readWrite: "RW", minimum: "0", maximum: "1", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: " " }
- name: Red-LED
  description: "Turn the Red LED to On/Off"
  attributes:
    { Pin_Num: "D6", Interface: "GPIO", Type: "OUT" }
  properties:
    value:
      { type: "bool", readWrite: "RW" }
    units:
      { type: "string", readWrite: "R", defaultValue: "Enabled/Disabled" }
- name: Grove-Relay
  description: "Switch the Grove Relay to On/Off"
  attributes:
    { Pin_Num: "D7", Interface: "GPIO", Type: "OUT" }
  properties:
    value:
      { type: "bool", readWrite: "RW" }
    units:
      { type: "string", readWrite: "R", defaultValue: " " }
- name: Grove-Buzzer
  description: "Turn On/Off the  buzzer"
  attributes:
    { Pin_Num: "D8", Interface: "GPIO", Type: "OUT" }
  properties:
    value:
      { type: "bool", readWrite: "RW" }
    units:
      { type: "string", readWrite: "R", defaultValue: " " }
- name: Display-String
  description: "Write a string to display on LCD"
  attributes:
    { Pin_Num: "I2C-2", Interface: "I2C", Type: "LCD" }
  properties:
    value:
      { type: "string", readWrite: "RW", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: "0" }
- name: Row
  description: "Set the Row number"
  attributes:
    { Pin_Num: "I2C-2", Interface: "I2C", Type: "LCD" }
  properties:
    value:
      { type: "uint8", readWrite: "RW", minimum: "0", maximum: "1", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: "0" }
- name: Column
  description: "Set the Column number"
  attributes:
    { Pin_Num: "I2C-2", Interface: "I2C", Type: "LCD" }
  properties:
    value:
      { type: "uint8", readWrite: "RW", minimum: "0", maximum: "15", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: "0" }
- name: LightIntensity
  description: "Read Light Intensity"
  attributes:
    { Pin_Num: "A0", Interface: "AIO", Type: "IN" }
  properties:
    value:
      { type: "float32", floatEncoding: "eNotation", readWrite: "RW", minimum: "0", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: "lumen" }
- name: SoundIntensity
  description: "Get the Sound Intensity"
  attributes:
    { Pin_Num: "A1", Interface: "AIO", Type: "IN", normalize: "false"}
  properties:
    value:
      { type: "float32", floatEncoding: "eNotation", readWrite: "RW", minimum: "0", maximum: "5", scale: "0.0049", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: "Vbiased" }
- name: RotaryAngle
  description: "Read Rotary Sensor Angle"
  attributes:
    { Pin_Num: "A2", Interface: "AIO", Type: "IN", normalize: "false" }
  properties:
    value:
      { type: "float32", floatEncoding: "eNotation", readWrite: "RW", minimum: "0", maximum: "300", scale: "0.2933", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: "Degree" }
- name: RotaryVoltage
  description: "Read Rotary Sensor Voltage"
  attributes:
    { Pin_Num: "A2", Interface: "AIO", Type: "IN", normalize: "false"}
  properties:
    value:
      { type: "float32", floatEncoding: "eNotation", readWrite: "RW", minimum: "0", maximum: "5", scale: "0.0049", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: "V" }
- name: Temperature
  description: "Read Temperature from BME680"
  attributes:
    { Pin_Num: "I2C-1", Interface: "I2C", Type: "BME680"}
  properties:
    value:
      { type: "float32", floatEncoding: "eNotation", readWrite: "RW", minimum: "-40", maximum: "85", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: "Â°C" }
- name: Pressure
  description: "Read Pressure from BME680"
  attributes:
    { Pin_Num: "I2C-1", Interface: "I2C", Type: "BME680", normalize: "false"}
  properties:
    value:
      { type: "float32", floatEncoding: "eNotation", readWrite: "RW", minimum: "300", maximum: "1100", scale: "0.01", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: "hPa" }
- name: Humidity
  description: "Read Humidity from BME680"
  attributes:
    { Pin_Num: "I2C-1", Interface: "I2C", Type: "BME680"}
  properties:
    value:
      { type: "float32", floatEncoding: "eNotation", readWrite: "RW", minimum: "10", maximum: "90", defaultValue: "0" }
    units:
      { type: "string", readWrite: "R", defaultValue: "rH" }
deviceCommands:
- name: Get_ButtonState
  get:
  - { operation: "get", object: "ButtonState", property: "value", parameter: "ButtonState" }
- name: Get_LightIntensity
  get:
  - { operation: "get", object: "LightIntensity", property: "value", parameter: "LightIntensity" }
- name: Get_RotarySensorMeasurements
  get:
  - { index: "1", operation: "get", object: "RotaryAngle", property: "value", parameter: "RotaryAngle" }
  - { index: "2", operation: "get", object: "RotaryVoltage", property: "value", parameter: "RotaryVoltage" }
- name: Get_SoundIntensity
  get:
  - { operation: "get", object: "SoundIntensity", property: "value", parameter: "SoundIntensity" }
- name: Get_TempPressHumidity
  get:
  - { index: "1", operation: "get", object: "Temperature", property: "value", parameter: "Temperature" }
  - { index: "2", operation: "get", object: "Pressure", property: "value", parameter: "Pressure" }
  - { index: "3", operation: "get", object: "Humidity", property: "value", parameter: "Humidity" }
- name: Set_GreenLed
  set:
  - { operation: "set", object: "Green-LED", property: "value", parameter: "Green-LED" }
- name: Set_RedLed
  set:
  - { operation: "set", object: "Red-LED", property: "value", parameter: "Red-LED" }
- name: Set_BlueLed
  set:
  - { operation: "set", object: "Blue-LED", property: "value", parameter: "Blue-LED" }
- name: Write_String
  set:
  - { index: "1", operation: "set", object: "Display-String", property: "value", parameter: "Display-String" }
  - { index: "2", operation: "set", object: "Row", property: "value", parameter: "Row" }
  - { index: "3", operation: "set", object: "Column", property: "value", parameter: "Column" }
- name: Set_Buzzer
  set:
  - { operation: "set", object: "Grove-Buzzer", property: "value", parameter: "Grove-Buzzer" }
- name: Set_Relay
  set:
  - { operation: "set", object: "Grove-Relay", property: "value", parameter: "Grove-Relay" }

coreCommands:
- name: Get_ButtonState
  get:
    path: "/api/v1/device/{deviceId}/Get_ButtonState"
    responses:
    - code: "200"
      description: "valid and accepted"
      expectedValues: ["ButtonState"]
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Get_LightIntensity
  get:
    path: "/api/v1/device/{deviceId}/Get_LightIntensity"
    responses:
    - code: "200"
      description: "valid and accepted"
      expectedValues: ["LightIntensity"]
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Get_SoundIntensity
  get:
    path: "/api/v1/device/{deviceId}/Get_SoundIntensity"
    responses:
    - code: "200"
      description: "valid and accepted"
      expectedValues: ["SoundIntensity"]
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Get_RotarySensorMeasurements
  get:
    path: "/api/v1/device/{deviceId}/Get_RotarySensorMeasurements"
    responses:
    - code: "200"
      description: "valid and accepted"
      expectedValues: ["RotaryAngle", "RotaryVoltage"]
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Get_TempPressHumidity
  get:
    path: "/api/v1/device/{deviceId}/Get_TempPressHumidity"
    responses:
    - code: "200"
      description: "valid and accepted"
      expectedValues: ["Temperature", "Pressure", "Humidity"]
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Set_GreenLed
  put:
    path: "/api/v1/device/{deviceId}/Set_GreenLed"
    parameterNames: ["Green-LED"]
    responses:
    - code: "204"
      description: "valid and accepted"
      expectedValues: []
    - code: "400"
      description: "bad request"
      expectedValues: []
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Set_RedLed
  put:
    path: "/api/v1/device/{deviceId}/Set_RedLed"
    parameterNames: ["Red-LED"]
    responses:
    - code: "204"
      description: "valid and accepted"
      expectedValues: []
    - code: "400"
      description: "bad request"
      expectedValues: []
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Set_BlueLed
  put:
    path: "/api/v1/device/{deviceId}/Set_BlueLed"
    parameterNames: ["Blue-LED"]
    responses:
    - code: "204"
      description: "valid and accepted"
      expectedValues: []
    - code: "400"
      description: "bad request"
      expectedValues: []
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Write_String
  put:
    path: "/api/v1/device/{deviceId}/Write_String"
    parameterNames: ["Display-String", "Row", "Column"]
    responses:
    - code: "204"
      description: "valid and accepted"
      expectedValues: []
    - code: "400"
      description: "bad request"
      expectedValues: []
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Set_Buzzer
  put:
    path: "/api/v1/device/{deviceId}/Set_Buzzer"
    parameterNames: ["Grove-Buzzer"]
    responses:
    - code: "204"
      description: "valid and accepted"
      expectedValues: []
    - code: "400"
      description: "bad request"
      expectedValues: []
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Set_Relay
  put:
    path: "/api/v1/device/{deviceId}/Set_Relay"
    parameterNames: ["Grove-Relay"]
    responses:
    - code: "204"
      description: "valid and accepted"
      expectedValues: []
    - code: "400"
      description: "bad request"
      expectedValues: []
    - code: "503"
      description: "service unavailable"
      expectedValues: []

